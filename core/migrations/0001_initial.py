# Generated by Django 5.2.4 on 2025-07-21 20:03

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=10, unique=True, verbose_name='Symbol')),
                ('name', models.CharField(max_length=100, verbose_name='Full Name')),
                ('display_name', models.CharField(blank=True, max_length=100, verbose_name='Display Name')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Currency',
                'verbose_name_plural': 'Currencies',
                'ordering': ['symbol'],
            },
        ),
        migrations.CreateModel(
            name='Exchange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Exchange Name')),
                ('display_name', models.CharField(max_length=100, verbose_name='Display Name')),
                ('base_url', models.URLField(verbose_name='API Base URL')),
                ('websocket_url', models.URLField(blank=True, null=True, verbose_name='WebSocket URL')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Exchange',
                'verbose_name_plural': 'Exchanges',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TradingPair',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol_format', models.CharField(help_text='Symbol format in the exchange API (e.g., XRPUSDT for Wallex)', max_length=50, verbose_name='Symbol Format')),
                ('pair_id', models.CharField(blank=True, help_text='Numeric ID for Ramzinex', max_length=20, null=True, verbose_name='Pair ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('arbitrage_threshold', models.DecimalField(decimal_places=2, default=0.5, help_text='Minimum profit percentage to identify an opportunity', max_digits=5, validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(10.0)], verbose_name='Arbitrage Threshold (%)')),
                ('min_volume', models.DecimalField(decimal_places=8, default=100, help_text='Minimum allowed trade volume', max_digits=20, verbose_name='Minimum Volume')),
                ('max_volume', models.DecimalField(decimal_places=8, default=10000, help_text='Maximum allowed trade volume', max_digits=20, verbose_name='Maximum Volume')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('base_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='base_pairs', to='core.currency', verbose_name='Base Currency')),
                ('exchange', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.exchange', verbose_name='Exchange')),
                ('quote_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quote_pairs', to='core.currency', verbose_name='Quote Currency')),
            ],
            options={
                'verbose_name': 'Trading Pair',
                'verbose_name_plural': 'Trading Pairs',
                'ordering': ['exchange__name', 'base_currency__symbol'],
                'unique_together': {('exchange', 'base_currency', 'quote_currency')},
            },
        ),
    ]
